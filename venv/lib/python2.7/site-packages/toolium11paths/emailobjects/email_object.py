# -*- coding: utf-8 -*-

# Copyright 2016 Telef√≥nica Digital | ElevenPaths
# This file is part of Toolium11paths.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import base64

from .html_object import HTMLObject


class EmailObject(object):
    """
    Class to represent an email message.

    It is basically an email.message.Message proxy class.
    https://docs.python.org/2/library/email.message.html
    """

    def __init__(self, message):
        self.message = message

    @property
    def subject(self):
        return self.message.get("Subject")

    @property
    def html(self):
        return HTMLObject(self.get_payload(decode=True))

    def reset_object(self, driver_wrapper=None):
        self.message=None

    def get_payload(self, decode=True):
        if self.message.is_multipart():
            payloads = self.message.get_payload()
            # return first element
            return payloads[0].get_payload(decode=decode)
        return self.message.get_payload(decode=decode)

    def get_payloads(self, decode=True):
        if self.message.is_multipart():
            payload = self.message.get_payload()
            return [p.get_payload(decode=decode) for p in payload]
        else:
            return [self.message.get_payload(decode=decode)]

    def get_content_transfer_encoding(self):
        return self.message.get("Content-Transfer-Encoding")

    def get_delivered_to(self):
        return self.message.get("Delivered-To")

    def get_all_received(self):
        return self.message.get_all("Received")


