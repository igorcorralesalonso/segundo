# -*- coding: utf-8 -*-

"""
Copyright (c) Telefonica Digital.
ElevenPaths QA Team <qateam@11paths.com>
"""

# noinspection PyUnresolvedReferences
from behave import step as behave_step

from toolium11paths.behave import step


@step(u'Storage "{key1}" and "{key2}" are equal')
def compare_storage_equal(context, key1, key2):
    """
    Compare the value of two storage variables
    :param context: Behave context
    :param key1: Storage key1
    :param key2: Storage key2
    """
    _compare_storage(context, key1, key2, True)


@step(u'Storage "{key1}" and "{key2}" are not equal')
def compare_storage_not_equal(context, key1, key2):
    _compare_storage(context, key1, key2, False)


def _compare_storage(context, key1, key2, equal=True):
    storage1 = context.storage[key1]
    storage2 = context.storage[key2]

    result = storage1 == storage2

    assert result == equal, u'Storage1: {storage1} | Storage1: {storage1} | Equal: {equal}'.format(storage1=storage1,
                                                                                                   storage2=storage2,
                                                                                                   equal=equal)


@step(u'I remove storage "{key}"')
def compare_storage_equal(context, key):
    del context.storage[key]
